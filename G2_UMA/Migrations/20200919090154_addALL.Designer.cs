// <auto-generated />
using G2_UMA.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace G2_UMA.Migrations
{
    [DbContext(typeof(dataContext))]
    [Migration("20200919090154_addALL")]
    partial class addALL
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("G2_UMA.Models.Fees", b =>
                {
                    b.Property<int>("Fee_Id")
                        .HasColumnName("Fee_Id");

                    b.Property<string>("F_Name")
                        .IsRequired()
                        .HasColumnName("Name");

                    b.HasKey("Fee_Id");

                    b.ToTable("Fees");
                });

            modelBuilder.Entity("G2_UMA.Models.Months", b =>
                {
                    b.Property<int>("M_Id")
                        .HasColumnName("M_Id");

                    b.Property<string>("M_Name")
                        .IsRequired()
                        .HasColumnName("Name");

                    b.HasKey("M_Id");

                    b.ToTable("Months");
                });

            modelBuilder.Entity("G2_UMA.Models.Payment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnName("Amount");

                    b.Property<int>("Fee_Id")
                        .HasColumnName("Fee_Id");

                    b.Property<int>("M_Id")
                        .HasColumnName("M_Id");

                    b.Property<string>("Std_Id")
                        .HasColumnName("Std_Id");

                    b.HasKey("id");

                    b.HasIndex("Fee_Id");

                    b.HasIndex("M_Id");

                    b.HasIndex("Std_Id");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("G2_UMA.Models.StudentInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Class");

                    b.Property<int>("age");

                    b.Property<int>("due");

                    b.Property<string>("gender")
                        .IsRequired();

                    b.Property<string>("name")
                        .IsRequired();

                    b.Property<int>("paid");

                    b.Property<string>("std_id");

                    b.HasKey("id");

                    b.ToTable("student_info");
                });

            modelBuilder.Entity("G2_UMA.Models.Students", b =>
                {
                    b.Property<string>("Std_Id")
                        .HasColumnName("Std_Id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnName("Address");

                    b.Property<string>("Birth_Date")
                        .IsRequired()
                        .HasColumnName("Birth_Date");

                    b.Property<int>("Class")
                        .HasColumnName("Class");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnName("Contact");

                    b.Property<string>("Father_Name")
                        .IsRequired()
                        .HasColumnName("Father_Name");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnName("Gender");

                    b.Property<int>("M_Id")
                        .HasColumnName("M_Id");

                    b.Property<string>("Mother_Name")
                        .IsRequired()
                        .HasColumnName("Mother_Name");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name");

                    b.HasKey("Std_Id");

                    b.HasIndex("M_Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("G2_UMA.Models.User", b =>
                {
                    b.Property<string>("username");

                    b.Property<string>("pass")
                        .IsRequired();

                    b.Property<string>("type")
                        .IsRequired();

                    b.HasKey("username");

                    b.ToTable("user");
                });

            modelBuilder.Entity("G2_UMA.Models.Payment", b =>
                {
                    b.HasOne("G2_UMA.Models.Fees", "Fees")
                        .WithMany("Payment")
                        .HasForeignKey("Fee_Id")
                        .HasConstraintName("FK_Payment_Fees");

                    b.HasOne("G2_UMA.Models.Months", "Months")
                        .WithMany("Payment")
                        .HasForeignKey("M_Id")
                        .HasConstraintName("FK_Payment_Months");

                    b.HasOne("G2_UMA.Models.Students", "Students")
                        .WithMany("Payment")
                        .HasForeignKey("Std_Id")
                        .HasConstraintName("FK_Payment_Students");
                });

            modelBuilder.Entity("G2_UMA.Models.Students", b =>
                {
                    b.HasOne("G2_UMA.Models.Months", "Months")
                        .WithMany("Students")
                        .HasForeignKey("M_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
